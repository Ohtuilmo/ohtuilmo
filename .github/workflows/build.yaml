name: Release pipeline

on:
  schedule:
    # Run every day at 5:00 UTC
    - cron: '0 3 * * *'
  push:
    branches: [main]
  pull_request:
    branches: [main]
    types: [opened, synchronize]

jobs:
  checkup:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    strategy:
      fail-fast: false
      matrix:
        node-version: ['10.x', '12.x', '20.x']
        browser-options: ['chrome', 'firefox', 'edge']
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install backend dependencies & run linter
        working-directory: ./backend
        run: |
          npm ci
          npm run lint:fix
      - name: Install frontend dependencies & run linter
        working-directory: ./frontend
        run: |
          npm ci
          npm run lint:fix
      - name: Build frontend
        working-directory: ./frontend
        run: |
          npm run build --if-present
      #- name: Preserve build as artifact
      #  uses: actions/upload-artifact@v4
      #  with:
      #    name: frontend-build-${{ matrix.node-version }}
      #    path: ./frontend/build
      #    retention-days: 1
      #    overwrite: true
      - name: Run Cypress tests
        uses: cypress-io/github-action@v6
        with:
          working-directory: ./frontend
          install-command: npm ci
          browser: ${{ matrix.browser-options }}
          start: |
            npm run e2e:install
            npm run e2e:setup
          wait-on: 'http://localhost:3000'
          wait-on-timeout: 120
          record: true # needs CYPRESS_RECORD_KEY, CYPRESS_PROJECT_ID & GITHUB_TOKEN
          parallel: true
          auto-cancel-after-failures: 1
          tag: node-${{ matrix.node-version }}-${{ matrix.browser-options }}
        env:
          CI: true
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          CYPRESS_PROJECT_ID: ${{ secrets.PROJECT_ID }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: End Cypress run
        if: ${{ always() }}
        run: npm run e2e:teardown
      
  #release:
  #  if: ${{ ! always() }}
  #  runs-on: ubuntu-latest
  #  needs: cypress-run
  #  timeout-minutes: 30
  #  steps:
  #    - name: Checkout code
  #      uses: actions/checkout@v4
  #    - name: Build image
  #      id: build-image
  #      uses: redhat-actions/buildah-build@v2
  #      with:
  #        image: ohtuilmo-backend
  #        tags: production ${{ github.sha }}
  #        containerfiles: |
  #          ./Dockerfile
  #    - name: Push to quay.io
  #      uses: redhat-actions/push-to-registry@v2
  #      with:
  #        image: ${{ steps.build-image.outputs.image }}
  #        tags: ${{ steps.build-image.outputs.tags }}
  #        registry: quay.io/toska
  #        username: toska+github
  #        password: ${{ secrets.QUAY_IO_TOKEN }}